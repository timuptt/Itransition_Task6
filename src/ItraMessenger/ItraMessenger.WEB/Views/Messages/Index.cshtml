@model IEnumerable<DisplayMessageViewModel>

@{
    ViewData["Title"] = "Messenger";
}

<div class="text-center">
  <div class="card">
    <div class="card-header">
      <div class="d-flex justify-content-between">
        <div class="d-flex align-content-center">
          <p class="text-black">@Context.User.Identity!.Name's received messages</p>
        </div>
        <button type="button" class="btn btn-outline-primary" id="openModal" data-toggle="modal" data-target="#writeMessageModal">
          <span><i class="bi bi-envelope"></i> Write message</span>
        </button>
      </div>
    </div>
    <div class="card-body">
      <div class="accordion" id="messagesAccordion">
        @if (@Model.Count() != 0)
        {
          var i = 0;
          foreach (var item in @Model)
          {
            <div class="accordion-item">
              <div class="accordion-header" id="heading_@i">
                <div class="accordion-button d-flex justify-content-center collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse_@i" aria-expanded="false" aria-controls="collapse_@i">
                  <div class="me-2"><span class="text-muted small">From: </span>@item.SenderName</div>
                  <div class="me-2"><span class="text-muted small">Title: </span>@item.Title</div>
                  <div class="text-muted small utc-date-time">@item.Date</div>
                </div>
              </div>
              <div id="collapse_@i" class="accordion-collapse collapse" aria-labelledby="heading_@i" data-bs-parent="#messagesAccordion">
                <div class="accordion-body text-start">
                  @item.Body
                </div>
              </div>
            </div>
            i++;
          }
        }
        else
        {
          <div>
            <h5 class="text-muted">You have no messages yet :(</h5>
          </div>
        }
      </div>
    </div>
  </div>
  @section Scripts
  {
    <script>
    $(function () {
        $('#recipientName').autocomplete({
            source: '@Url.Action("GetUserNamesByPrefix", "Messages")',
            minLength: 0
        });
        $("#recipientName").autocomplete("option", "appendTo", "#searchData");
    });
    </script>
  }
  @await Html.PartialAsync("_WriteMessage", new NewMessageViewModel())
</div>